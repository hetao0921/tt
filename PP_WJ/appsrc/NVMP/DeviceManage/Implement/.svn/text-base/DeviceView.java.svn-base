package NVMP.DeviceManage.Implement;

import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;

import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JRootPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;


//import NVMP.test.LoginCenter;




/**
 * 
 * @author Administrator
 */
public class DeviceView extends javax.swing.JFrame{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public DeviceView(DeviceRun1 r) {
		dvRun = r;
		initComponents();
		
		initJTree();
		initMenu();
		//设置表头列名
		setTabModelDevice();
//		r.getSmd().GetEncodeDeviceOnline(LoginCenter.sessionId);
		setVisible(true);
	}

	/** Creates new form Test */
	public DeviceView() {
//		try {
////			dvRun = new DeviceRun(LoginCenter.sessionId,LoginCenter.ip,
////					Integer.parseInt(LoginCenter.port));
//		} catch (NumberFormatException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		
		initComponents();
		
		initJTree();
		initMenu();
		//设置表头列名
		setTabModelDevice();
	}
	
	
	/**
	 * 设置表头
	 */
	public void setTabModelDevice(){
		sModel = new DefaultTableModel(new Object [][] { }, new String [] { "时间", "事由","状态" });
        jTable1.setModel(sModel);
    }

	/**
	 * 初始化树状视图
	 */
	public void initJTree(){
        MutableTreeNode root = dvRun.getTreeModel();
        DefaultTreeModel model = new DefaultTreeModel(root);
        tree.setModel(model);
    }
	
	/**
	 * 初始化菜单
	 */
	public void initMenu(){
		tree.getSelectionModel().setSelectionMode(
				TreeSelectionModel.SINGLE_TREE_SELECTION);
		tree.setCellEditor(new DefaultTreeCellEditor(tree,
				new DefaultTreeCellRenderer()));
		
		bufang = new JMenuItem("布防");
		chefang = new JMenuItem("撤防");
		mbufang = new JMenuItem("布防");
		mchefang = new JMenuItem("撤防");
		vbufang = new JMenuItem("布防");
		vchefang = new JMenuItem("撤防");
		start = new JMenuItem("开始输出");
		stop = new JMenuItem("停止输出");
		
		move = new JMenu("移动侦测");
		video = new JMenu("视频丢失");
		move.add(mbufang);
		move.add(mchefang);
		video.add(vbufang);
		video.add(vchefang);
		//为右键菜单添加鼠标单击事件
		addListener();
	}
	
	
    /**
     * 追加文本到文本框中
     */
    public static void showTextA(String str){
    	jTextArea1.append(str);
    }
    
    /**
     * 设置文本到文本框中
     */
    public static void showText(String str){
    	jTextArea1.setText(str);
    }

    /**
     * 获取文本框的值
     * @return
     */
    public static String getAreaText(){
    	return jTextArea1.getText();
    }
     
	
    /**
     * 向设备管理服务器表格中添加数据
     */
    public static void insertTableServer(Object[] ab){
    	try{
    		if(sModel!=null){
    			// 向表格中添加事由
            	sModel.insertRow(0, ab);
        		// 让表格只显示三百条数据
        		if (sModel.getRowCount() == 300) {
        			sModel.removeRow(299);
        		}
    		}
    	}catch(Exception e){
    		e.printStackTrace();
    	}
    }
    
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {   	
    	
    	//去掉标题栏的图标
		Toolkit kit=Toolkit.getDefaultToolkit();
		Image img=kit.getImage("*.gif");
		setIconImage(img);
		//去掉最大化最小化按钮 
		setUndecorated(true);    
        getRootPane().setWindowDecorationStyle(JRootPane.PLAIN_DIALOG);

		jScrollPane1 = new javax.swing.JScrollPane();
		tree = new javax.swing.JTree();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jScrollPane3 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setName("Form"); // NOI18N

		jScrollPane1.setName("jScrollPane1"); // NOI18N

		tree.setFont(new Font("宋体", Font.BOLD, 14)); // NOI18N
		tree.setName("jTree1"); // NOI18N
//		tree.getSelectionModel().setSelectionMode(TreeSelectionModel.CONTIGUOUS_TREE_SELECTION);
		tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
			public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
				jTree1ValueChanged(evt);
			}
		});
		
		jScrollPane1.setViewportView(tree);

		jScrollPane2.setName("jScrollPane2"); // NOI18N

		jTable1.setFont(new Font("宋体", Font.BOLD, 14)); // NOI18N
		jTable1.setName("jTable1"); // NOI18N
		jScrollPane2.setViewportView(jTable1);
		

		jScrollPane3.setName("jScrollPane3"); // NOI18N

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jTextArea1.setName("jTextArea1"); // NOI18N
		jTextArea1.setFont(new Font("宋体", Font.BOLD, 18));
		jScrollPane3.setViewportView(jTextArea1);

		
		
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										283,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														jScrollPane2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														659, Short.MAX_VALUE)
												.addComponent(
														jScrollPane3,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														659, Short.MAX_VALUE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														636, Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane2,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		528,
																		Short.MAX_VALUE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		jScrollPane3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		98,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap()));

		pack();
	}// </editor-fold>

	private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent e) {
		TreePath tp = e.getNewLeadSelectionPath();
		String[] parents = tp.getParentPath().toString().split(", ");
		if(parents.length==3){
			//获取设备的父节点，判断是摄像机、报警点还是输出点
			String type = parents[2].substring(0, 3);
			String path = tp.getLastPathComponent().toString();	
			//获取该设备在表中的主键ID
			String id = path.substring(path.indexOf("_") + 1);
			dvRun.treeSelected(type,Integer.parseInt(id));
		}
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new DeviceView().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JPopupMenu popMenu;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTable jTable1;
	private static DefaultTableModel sModel;
	private static JTextArea jTextArea1;
	private javax.swing.JTree tree;
	
	private JMenu move ;
	private JMenu video ;

	private JMenuItem bufang;
	private JMenuItem chefang;
	private JMenuItem mbufang;
	private JMenuItem mchefang;
	private JMenuItem vbufang;
	private JMenuItem vchefang;
	private JMenuItem start;
	private JMenuItem stop;
	
	public IDeviceRun dvRun;
	// End of variables declaration

	
	
	public void addListener(){
		//为报警点上的布防菜单添加鼠标点击事件
		bufang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.getAlarm();
            }
        });
		//为报警点上的撤防菜单添加鼠标点击事件
		chefang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.removeAlarm();
            }
        });
		//为移动侦测的布防菜单添加鼠标点击事件
		mbufang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.getAlarm();
            }
        });
		//为移动侦测上的撤防菜单添加鼠标点击事件
		mchefang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.removeAlarm();
            }
        });
		//为视频丢失的布防菜单添加鼠标点击事件
		vbufang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.getAlarm();
            }
        });
		//为视频丢失上的撤防菜单添加鼠标点击事件
		vchefang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.removeAlarm();
            }
        });
		//为报警点上的布防菜单添加鼠标点击事件
		start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.getAlarm();
            }
        });
		//为报警点上的布防菜单添加鼠标点击事件
		stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
            	dvRun.removeAlarm();
            }
        });
		
		//为树状视图添加右键菜单
		tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent e) {
            	TreePath path = tree.getPathForLocation(e.getX(), e.getY()); // 关键是这个方法的使用
        		if (path == null) {
        			return;
        		}
        		tree.setSelectionPath(path);

        		String [] ss = path.toString().split(", ");
        		if(ss.length==4){
        			if(ss[2].equals("摄像机")){
            			popMenu = new JPopupMenu();
            			popMenu.add(move);
            			popMenu.add(video);
            		}else if(ss[2].equals("报警点")){
            			popMenu = new JPopupMenu();
            			popMenu.add(bufang);	
            			popMenu.add(chefang);
            		}else if(ss[2].equals("输出点")){
            			popMenu = new JPopupMenu();
            			popMenu.add(start);
            			popMenu.add(stop);
            		}else{
            			popMenu = new JPopupMenu();
            		}
        		}
        		
        		if (e.getButton() == 3) {
        			popMenu.show(tree, e.getX(), e.getY());
        		}
            }
        });
	}
	
}


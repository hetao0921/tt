package corenet.netbase.Interface;

import java.net.SocketAddress;

import corenet.exchange.IExchangeServer;

import corenet.rpc.IMessage;


///////////////////////////////////////////////////////////
//  IChannel.cs
//  Implementation of the Interface IChannel
//  Generated by Enterprise Architect
//  Created on:      30-ÎåÔÂ-2011 16:34:52
//  Original author: Administrator
///////////////////////////////////////////////////////////
 







//C# TO JAVA CONVERTER TODO TASK: Delegates are not available in Java:
//	public delegate void OnRecvMessageEvent(IMessage Message);

	/** 
	 Ž«ÊäÐÅµÀœÓ¿Ú
	 
	*/
	public interface IChannel
	{

		/** 
		 »ñÈ¡¶Ô¶Ë±àºÅ
		 
		*/
		String GetSessionId();
    
		public IExchangeServer getExchangeServer();
		/*
		 * zzw
		 * ¹ØÓÚsocketÁ¬œÓ
		 * ŽËŽŠÎÒÓÃµÄÊÇ SocketAddress
		 * */
		SocketAddress GetPeerEndPoint();

        String getRemoteIP();  
		/** 
		 @param message
		 @param Len
		*/
		void SendMessage(byte[] message);

		boolean SendMessage(IMessage message);

		IMessage RecvMessage();
		boolean GobalSendMessage(IMessage message, String target,
				String source,String uid);

		boolean GobalOnline(Boolean onflag, String source, String userid,String uid);

		void GobalGroupLeave(Boolean onflag, String source, String userid,
				String groupname,String uid);
		// 中心和中心之间的通话
		void CenterSendMessage(IMessage bodyMessage, String target,
				String source, String uid, IMessage otherMessage);
		
		//发送心跳用
		void SendBeatAlive();
//C# TO JAVA CONVERTER TODO TASK: Events are not available in Java:
//		event OnRecvMessageEvent OnRecvMessage;

		void ServerClinet(IMessage message);
		
		
		boolean isError();
		void setError();

	} //end IChannel
 //end namespace ÓŠÓÃ·þÎñÆ÷
